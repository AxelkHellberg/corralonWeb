{"version":3,"sources":["webpack:///./src/app/pages/auth/login/login.component.html","webpack:///./src/app/pages/auth/login/login.component.scss","webpack:///./src/app/pages/auth/login/login.component.ts","webpack:///./src/app/pages/auth/login/login.module.ts","webpack:///./src/app/pages/auth/register/register.component.html","webpack:///./src/app/pages/auth/register/register.component.scss","webpack:///./src/app/pages/auth/register/register.component.ts","webpack:///./src/app/pages/auth/register/register.module.ts"],"names":[],"mappings":"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","file":"default~app-pages-auth-auth-routing-module~app-pages-pages-module.js","sourcesContent":["module.exports = \"<h2 class=\\\"title\\\">\\r\\n  <img class=\\\"logo\\\" src=\\\"../../../../assets//images/isotipo.png\\\" />\\r\\n</h2>\\r\\n<small class=\\\"form-text sub-title\\\">¡Hola! Ingresá con email y contraseña.</small\\r\\n  >\\r\\n<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"loginUser(form)\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n     <label class=\\\"sr-only\\\" for=\\\"input-email\\\">Email</label>\\r\\n     <input ngModel class=\\\"form-control\\\" id=\\\"input-email\\\" name=\\\"username\\\" placeholder=\\\"Email\\\" required/>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n     <label class=\\\"sr-only\\\" for=\\\"input-password\\\">Contraseña</label>\\r\\n     <input ngModel class=\\\"form-control\\\" id=\\\"input-password\\\" name=\\\"password\\\" placeholder=\\\"Contraseña\\\" type=\\\"password\\\" required minlength=\\\"4\\\" maxlength=\\\"50\\\"/>\\r\\n  </div>\\r\\n  <div class=\\\"form-group accept-group col-sm-12\\\">\\r\\n     <nb-checkbox name=\\\"rememberMe\\\"></nb-checkbox>\\r\\n     <a class=\\\"forgot-password\\\" routerlink=\\\"../request-password\\\" >¿Olvidaste tu contraseña?</a>\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-block btn-hero-success\\\" [disabled]=\\\"loading\\\" nbSpinnerMessage=\\\"Cargando\\\" [nbSpinner]=\\\"loading\\\" nbSpinnerStatus=\\\"success\\\" nbButton type=\\\"submit\\\">\\r\\n    Iniciar Sesión\\r\\n  </button>\\r\\n</form>\\r\\n<div class=\\\"links\\\">\\r\\n  <small class=\\\"form-text\\\">\\r\\n    ¿No tenés una cuenta?\\r\\n    <a [routerLink]=\\\"['/auth/register']\\\">\\r\\n      <strong>Registrarse</strong>\\r\\n    </a>\\r\\n  </small>\\r\\n</div>\\r\\n\"","module.exports = \".logo {\\n  width: 200px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aC9sb2dpbi9DOlxcVXNlcnNcXGF4ZWxcXGRlc2t0b3BcXHByb3llY3RvXFxzMmktYmFja29mZmljZS13ZWIvc3JjXFxhcHBcXHBhZ2VzXFxhdXRoXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ28ge1xyXG4gIHdpZHRoOiAyMDBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NbLoginComponent, NbAuthService } from '@nebular/auth';\r\nimport { Router } from '@angular/router';\r\nimport { GeneralService } from '../../../services/general.service';\r\nimport { UserBasicData } from '../../../@models/general';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MessagesChannelsEnum, MessagesTypeEnum } from '../../../constants/message-bus.enum';\r\nimport { MessageBusService } from '../../../services/message-bus.service';\r\nimport { NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent extends NbLoginComponent {\r\n  loading: boolean;\r\n\r\n  constructor(\r\n      authService: NbAuthService,\r\n      changeDetectorRef: ChangeDetectorRef,\r\n      router: Router,\r\n      private generalService: GeneralService,\r\n      private messageBus: MessageBusService,\r\n      private toastService: NbToastrService,\r\n    ) {\r\n    super(authService, {}, changeDetectorRef, router);\r\n    localStorage.setItem('host', '')\r\n  }\r\n\r\n  async loginUser({form}: NgForm) {\r\n    this.loading = true;\r\n    const userData: UserBasicData =  {\r\n      username: form.controls.username.value,\r\n      password: form.controls.password.value,\r\n    };\r\n\r\n    let token;\r\n    try {\r\n      const response = await this.generalService.login(userData);\r\n      token = response.accessToken;\r\n      console.log(\"token\");\r\n      console.log(token);\r\n      localStorage.setItem('token', token);\r\n      this.loading = true;\r\n    } catch (e) { }\r\n\r\n    try {\r\n      const userInfo = await this.generalService.getUserInfo();\r\n      console.log(userInfo)\r\n      localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n      this.messageBus.publish(MessagesChannelsEnum.USER, MessagesTypeEnum.INFO, userInfo);\r\n      this.router.navigate(['pages/dashboard']);\r\n      this.loading = true;\r\n    } catch (error) {\r\n      this.toastService.danger('Posiblemente los datos son incorrectos', 'Inicio de Sesión')\r\n    } finally { this.loading = false; }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NbCheckboxModule, NbSpinnerModule, NbToastrService } from '@nebular/theme';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NbCheckboxModule,\r\n    NbSpinnerModule,\r\n  ],\r\n  declarations: [LoginComponent],\r\n  exports: [LoginComponent],\r\n  providers: [NbToastrService]\r\n})\r\nexport class LoginComponentModule { }\r\n","module.exports = \"<h2 class=\\\"title\\\">Registrarse</h2>\\r\\n<form #form=\\\"ngForm\\\" (submit)=\\\"registerUser(form)\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input ngModel class=\\\"form-control\\\" name=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\" type=\\\"text\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input ngModel class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Contraseña\\\" type=\\\"password\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input ngModel class=\\\"form-control\\\" name=\\\"name\\\" placeholder=\\\"Nombre\\\" type=\\\"text\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input ngModel class=\\\"form-control\\\" name=\\\"lastName\\\" placeholder=\\\"Apellido\\\" type=\\\"text\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input ngModel class=\\\"form-control\\\" name=\\\"dni\\\" placeholder=\\\"DNI\\\" type=\\\"text\\\">\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-block btn-hero-success\\\" type=\\\"submit\\\">Registrarme</button>\\r\\n</form>\\r\\n<div class=\\\"links\\\">\\r\\n  <small class=\\\"form-text\\\"> ¿Ya tiene una cuenta?\\r\\n    <a [routerLink]=\\\"['/auth/login']\\\">\\r\\n      <strong _ngcontent-c22=\\\"\\\">Iniciar sesión</strong>\\r\\n    </a>\\r\\n  </small>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NbRegisterComponent, NbAuthService } from '@nebular/auth';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { GeneralService } from '../../../services/general.service';\r\nimport { UserData } from '../../../@models/general';\r\n\r\n@Component({\r\n  selector: 'ngx-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent extends NbRegisterComponent {\r\n\r\n  constructor(\r\n    authService: NbAuthService,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    router: Router,\r\n    private generalService: GeneralService,\r\n  ) {\r\n    super(authService, {}, changeDetectorRef, router);\r\n   }\r\n\r\n  async registerUser(form: NgForm) {\r\n    const userData: UserData = {\r\n      name: form.form.controls.name.value,\r\n      lastName: form.form.controls.lastName.value,\r\n      username: form.form.controls.username.value,\r\n      password: form.form.controls.password.value,\r\n      dni: form.form.controls.dni.value,\r\n      fileNumber: '5',\r\n    }\r\n    try {\r\n      await this.generalService.createUser(userData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [RegisterComponent],\r\n  exports: [RegisterComponent],\r\n})\r\nexport class RegisterComponentModule { }\r\n"],"sourceRoot":""}